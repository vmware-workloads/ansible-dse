- name: gather hardware facts
  ansible.builtin.setup:
    gather_subset:
      - hardware

- name: Set task variables
  ansible.builtin.set_fact:
    disks:
      - /dev/sdb
      - /dev/sdc
    mount_paths:
      - "{{ default_dse_data_homedir }}"
      - "{{ default_dse_syslog_dir }}"

- name: Gather the list of mounted devices
  ansible.builtin.shell:
    cmd: >
      lsblk --list --noheadings --output MOUNTPOINT,NAME 
      | awk '/^\//{print $2}'
      | awk '/^sd/{print $1}'
      | awk '{sub(/[0-9]+/, "", $(NF-1)); print }'
      | uniq
  register: mounted_disks
  changed_when: False

- name: Gather the list of all devices
  ansible.builtin.shell:
    cmd: >
      lsblk --list --noheadings --output NAME
      | awk '/^sd/{print $1}' 
      | awk '{sub(/[0-9]+/, "", $(NF-1)); print }'
      | uniq
  register: all_disks
  changed_when: False

- name: Calculate the unused devices
  set_fact:
    unused_disks: "{{ all_disks.stdout_lines | difference(mounted_disks.stdout_lines) }}"

- name: debug
  ansible.builtin.debug:
    var: mounted_disks.stdout_lines

- name: debug
  ansible.builtin.debug:
    var: all_disks.stdout_lines

- name: debug
  ansible.builtin.debug:
    var: unused_disks

- name: Check the required number of disks on the host
  ansible.builtin.assert:
    that:
      - 'sdb' in all_disks.stdout_lines
      - 'sdc' in all_disks.stdout_lines

- name: Create xfs filesystem
  filesystem:
    fstype: xfs
    dev: "{{ item }}"
  loop: "{{ disks }}"

- name: Mount disks
  ansible.posix.mount:
    path: "{{ item.1 }}"
    src: "{{ item.0 }}"
    fstype: xfs
    state: mounted
  loop: "{{ disks | zip(mount_paths) | list }}"
