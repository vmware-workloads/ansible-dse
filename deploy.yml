- name: Wait for systems to boot up and cloud-init to complete
  hosts: all
  gather_facts: no
  any_errors_fatal: true
  tasks:
    - name: Wait up to 300 seconds
      wait_for_connection:
        delay: 3
        sleep: 5
        timeout: 300

    - name: Gather all facts of cloud init
      cloud_init_data_facts:
      register: result

    - name: Wait for cloud init to finish
      cloud_init_data_facts:
        filter: status
      register: res
      until: "res.cloud_init_data_facts.status.v1.stage is defined and not res.cloud_init_data_facts.status.v1.stage"
      retries: 50
      delay: 5

- name: Configure systems
  hosts: dse
  any_errors_fatal: true
  become: true
  gather_facts: true
  gather_subset:
    - "distribution"
    - "distribution_release"
    - "distribution_major_version"
    - "distribution_version"
    - "os_family"
  vars:
    #dse_ver_major: "6.8"
    #dse_ver_minor: "44"
    #dse_syslog_dir: /var/log/cassandra
    #dse_data_homedir: /opt/dse_data
  roles:
    - ansible_role_configure_os


- name: Install and configure DSE
  hosts: dse
  any_errors_fatal: true
  become: true
  become_method: sudo
  roles:
    - ansible_role_dse
#
## Configure JVM options
#- hosts: dse
#  any_errors_fatal: true
#  become: true
#  become_method: sudo
#  tasks:
#    - name: remove last line
#      lineinfile:
#          path: /etc/dse/cassandra/jvm-server.options
#          regexp: "# The newline in the end of file is intentional"
#          state: absent
#    - name: Add JVM options
#      lineinfile:
#        path: /etc/dse/cassandra/jvm-server.options
#        line: "{{ item }}"
#      with_items:
#      - '# Additional JVM options from des-automation tool'
#      - '-XX:+UseG1GC'
#      - '-XX:G1RSetUpdatingPauseTimePercent=5'
#      - '-XX:MaxGCPauseMillis=300'
#      - '-XX:InitiatingHeapOccupancyPercent=70 -Xms31G -Xmx31G'
#    - name: Add new line and comments
#      shell: printf '\n# The newline in the end of file is intentional' >> /etc/dse/cassandra/jvm-server.options
#
## Start DSE seed nodes
#- hosts: dse
#  any_errors_fatal: true
#  name: Start seed node first one by one
#  serial: 1
#  become: true
#  become_method: sudo
#  vars:
#    srvc_name: dse
#  roles:
#    - { role: start_srvc, when: seed == 'true' }
#
## Start DSE non-seed nodes
#- hosts: dse
#  any_errors_fatal: true
#  name: Start non-seed node first one by one
#  serial: 1
#  become: true
#  become_method: sudo
#  vars:
#    srvc_name: dse
#  roles:
#    - { role: start_srvc, when: seed == 'false' }
#
#
## Check DSE version and C* version
#- hosts: dse
#  tasks:
#  - name: Check DSE version
#    command: "dse -v"
#    register: _dse_ver
#  - debug:
#     msg: "DSE Version: {{ _dse_ver.stdout }}"
